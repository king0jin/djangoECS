name: django
on:
 push:
   branches: [ "main" ]
 pull_request:
   branches: [ "main" ]

permissions:
 id-token: write # This is required for requesting the JWT
 contents: read # This is required for actions/checkout

env:
  AWS_REGION: ap-northeast-2
  ECR_REPOSITORY: djangoecs
  ECS_TASK_DEFINITION: ./task-definition.json
  CONTAINER_NAME: djangoApp
  ECS_SERVICE: djangoecs
  ECS_CLUSTER: djangocicd 

jobs:
  build:
    runs-on : ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Python Setup
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{secrets.DOCKERHUB_USERNAME}}
          password: ${{secrets.DOCKERHUB_TOKEN}}

      - name: build and release to DockerHub
        env:
          NAME: ${{secrets.DOCKERHUB_USERNAME}}
          REPO: djangoecs
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REPO .
          docker tag $REPO:latest $NAME/$REPO:$IMAGE_TAG
          docker push $NAME/$REPO:$IMAGE_TAG

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::730335547094:role/djangoECSrole
          role-session-name: djangoECSrole
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@62f4f872db3836360b72999f4b87f1ff13310f3a

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@c804dfbdd57f713b6c079302a4c01db7017a36fc
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@df9643053eda01f169e64a0e60233aacca83799a
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true